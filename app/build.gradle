/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
}

// https://github.com/tricktron/jdk11-encoding-issue#workaround-to-make-it-work-with-gradle-on-windows
run.configure {
    //allJvmArgs = ['-Dsun.stdout.encoding=cp850']
    allJvmArgs = ["-Dfile.encoding=UTF-8",'-Dsun.stdout.encoding=UTF-8']
    //allJvmArgs = ['-Dsun.stdout.encoding=UTF-8']
}

application {
    // Define the main class for the application.
    
    //applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8",'-Dsun.stdout.encoding=utf-8']
    //applicationDefaultJvmArgs = ['-Dsun.stdout.encoding=cp850']
    mainClass = 'br.erickweil.Inicio'
}

/**
 * 1st approach: Setting encoding during compilation in Java and Test classes
 */
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

/**
 * 2nd approach: Setting encoding during compilation in Java and Test classes
 */
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}
tasks.withType(Test) {
	systemProperty "file.encoding", "UTF-8"
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
